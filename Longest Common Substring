Concept is based on Longest Common Subsequence
Only we need to update is if and else conditions ;
Since substring is continuous, we have to add in result only continuous count

int longestCommonSubstr (string s1, string s2, int n, int m)
    {
        // your code here
        int **dp = new int*[n+1];
        for(int i=0; i<=n; i++){
            dp[i] = new int[m+1];
        }
        //vector<vector<int>> dp(x+1,vector<int>(y+1,-1));
        for(int i=0; i<=n; i++){
            for(int j=0; j<=m; j++){
                if(i==0 or j==0)
                dp[i][j] = 0;
            }
        }
        int ans = 0;
        for(int i=1; i<=n; i++){
            for(int j=1; j<=m; j++){
                if(s1[i-1] == s2[j-1]){
                    dp[i][j] = (1+dp[i-1][j-1]);
                }
                else{
                    dp[i][j] = 0;
                }
                ans = max(ans, dp[i][j]);        //maximum value
            }
        }
        return ans;
    }
